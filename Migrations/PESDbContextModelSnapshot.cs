// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PropertyErrandsService.db;

#nullable disable

namespace PropertyErrandsService.Migrations
{
    [DbContext(typeof(PESDbContext))]
    partial class PESDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("PropertyErrandsService.db.entities.Building", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PropertyId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("PropertyErrandsService.db.entities.MaintenanceJob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaintenanceJobStatusId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SupplierId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TenantId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MaintenanceJobStatusId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("TenantId");

                    b.ToTable("MaintenanceJobs");
                });

            modelBuilder.Entity("PropertyErrandsService.db.entities.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("PropertyErrandsService.db.entities.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("PropertyErrandsService.db.entities.Tenant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AmountOwned")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UnitId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("PropertyErrandsService.db.entities.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BuildingId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("PropertyErrandsService.db.models.MaintenanceJobStatus", b =>
                {
                    b.Property<int>("MaintenanceJobStatusId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MaintenanceJobStatusId");

                    b.ToTable("MaintenanceJobStatus");

                    b.HasData(
                        new
                        {
                            MaintenanceJobStatusId = 0,
                            Name = "Logged"
                        },
                        new
                        {
                            MaintenanceJobStatusId = 1,
                            Name = "InProgress"
                        },
                        new
                        {
                            MaintenanceJobStatusId = 2,
                            Name = "Completed"
                        });
                });

            modelBuilder.Entity("PropertyErrandsService.db.entities.Building", b =>
                {
                    b.HasOne("PropertyErrandsService.db.entities.Property", "Property")
                        .WithMany("Buildings")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("PropertyErrandsService.db.entities.MaintenanceJob", b =>
                {
                    b.HasOne("PropertyErrandsService.db.models.MaintenanceJobStatus", "MaintenanceJobStatus")
                        .WithMany("MaintenanceJobs")
                        .HasForeignKey("MaintenanceJobStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PropertyErrandsService.db.entities.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PropertyErrandsService.db.entities.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("MaintenanceJobStatus");

                    b.Navigation("Supplier");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("PropertyErrandsService.db.entities.Tenant", b =>
                {
                    b.HasOne("PropertyErrandsService.db.entities.Unit", "Unit")
                        .WithMany("Tenants")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("PropertyErrandsService.db.entities.Unit", b =>
                {
                    b.HasOne("PropertyErrandsService.db.entities.Building", "Building")
                        .WithMany("Units")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");
                });

            modelBuilder.Entity("PropertyErrandsService.db.entities.Building", b =>
                {
                    b.Navigation("Units");
                });

            modelBuilder.Entity("PropertyErrandsService.db.entities.Property", b =>
                {
                    b.Navigation("Buildings");
                });

            modelBuilder.Entity("PropertyErrandsService.db.entities.Unit", b =>
                {
                    b.Navigation("Tenants");
                });

            modelBuilder.Entity("PropertyErrandsService.db.models.MaintenanceJobStatus", b =>
                {
                    b.Navigation("MaintenanceJobs");
                });
#pragma warning restore 612, 618
        }
    }
}
